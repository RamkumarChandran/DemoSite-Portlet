<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <context:component-scan base-package="org.broadleafcommerce.common.web.security"/>
    <context:component-scan base-package="org.broadleafcommerce.profile.web.core.security"/>
    <context:component-scan base-package="org.broadleafcommerce.core.web.order.security"/>
    
    <!-- Resources do not need security -->
    <sec:http pattern="/css/**" security="none" />
    <sec:http pattern="/fonts/**" security="none" />
    <sec:http pattern="/img/**" security="none" />
    <sec:http pattern="/js/**" security="none" />       
    <sec:http pattern="/favicon.ico" security="none" />       
    <sec:http pattern="/robots.txt" security="none" />
    <!-- This also goes for static assets delivered by the application -->
    <sec:http pattern="/**/${asset.server.url.prefix.internal}/**" security="none" />       
    
	<!-- Set up Spring security for the application -->
	
	<!--  The BLC Authentication manager.   -->
    
    <bean id="liferayAuthenticationProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <property name="preAuthenticatedUserDetailsService">
            <bean class="com.mycompany.filter.security.BroadleafPreAuthenticatedUserDetailsService"/>
        </property>
    </bean>
	<sec:authentication-manager alias="blAuthenticationManager">
        <sec:authentication-provider ref="liferayAuthenticationProvider" />
	</sec:authentication-manager>
	
    
    <!--  User details service that authenticates using customer data in the database. -->
    <!-- even though unused, a lot of things depend on this bean so leave it for now -->
    <sec:jdbc-user-service data-source-ref="webDS"
		id="blUserDetailsService"
		users-by-username-query="SELECT USER_NAME,PASSWORD,TRUE FROM BLC_CUSTOMER WHERE USER_NAME=?"
		authorities-by-username-query="SELECT c.USER_NAME,r.ROLE_NAME from BLC_CUSTOMER c 
	                                      JOIN BLC_CUSTOMER_ROLE cr ON c.CUSTOMER_ID = cr.CUSTOMER_ID 
	                                      JOIN BLC_ROLE r ON cr.ROLE_ID = r.ROLE_ID 
	                                      WHERE USER_NAME=?" />
    
<!-- 	<bean id="blCsrfFilter" class="org.broadleafcommerce.common.security.handler.CsrfFilter" />
 -->	                                      
    <!-- Sets the login failure URL -->
    <!-- Not necessary in portlet environment -->
    <!--
	<bean id="blAuthenticationFailureHandler" class="org.broadleafcommerce.common.security.BroadleafAuthenticationFailureHandler">
		<constructor-arg value="/login?error=true" />
		<property name="redirectStrategy" ref="blAuthenticationFailureRedirectStrategy" />
	</bean>
    -->
    
    <!-- Sets the login success URL -->
    <!-- Not necessary in portlet environment -->
    <!--
	<bean id="blAuthenticationSuccessHandler" class="org.broadleafcommerce.core.web.order.security.BroadleafAuthenticationSuccessHandler">
		<property name="redirectStrategy" ref="blAuthenticationSuccessRedirectStrategy" />
		<property name="defaultTargetUrl" value="/account" />
		<property name="targetUrlParameter" value="successUrl" />
		<property name="alwaysUseDefaultTargetUrl" value="false" />
	</bean>
	-->
    
</beans>
